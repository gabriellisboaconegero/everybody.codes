module Quest_7_input where
import Parser
import Control.Applicative (some, (<|>))
import Data.List (nub)
import Data.Char
import Data.Either

planId :: Parser Char Int [Char]
planId = some (oneOf ['A'..'Z'])

plan = planId <* (char ':') <:> (sepBy (oneOf ['+', '-', '=']) (char ','))
parser = sepBy plan (char '|')

track :: Parser Char Int [Char]
track = some (oneOf ['+', '-', '=', 'S'])

example1 = fst . fromRight ([], []) $ runParser parser "A:+,-,=,=|B:+,=,-,+|C:=,-,+,+|D:=,=,=,+"
input1 = fst . fromRight ([], []) $ runParser parser "B:=,=,+,-,+,-,+,=,+,-|K:=,+,+,+,-,=,+,=,-,-|J:=,-,=,=,-,+,-,+,+,+|C:+,-,=,-,=,-,=,+,+,+|H:-,+,+,=,+,=,-,=,-,+|F:+,+,+,-,=,-,=,+,-,=|D:-,+,-,=,+,+,+,-,=,=|I:=,+,-,-,=,=,+,+,-,+|E:+,-,+,=,-,+,+,=,-,="

track1 = fst . fromRight ([], []) $ runParser track "+===++-=+=-S"

input2 = fst . fromRight ([], []) $ runParser parser "B:-,+,=,=,=,+,-,+,=,+,+,=,+,=,+,=,=,-,=,+,-,+,+,-,+,+,+,-,-,+,+,+,+,=,+,+,-,+,-,-|H:-,=,+,+,+,-,+,=,=,-,=,+,+,+,-,=,-,+,+,=,+,+,-,=,-,+,=,+,-,+,+,-,+,+,+,+,-,+,=,=|I:-,+,=,=,=,-,=,+,+,-,-,-,+,=,-,+,+,=,+,+,=,+,-,=,+,+,+,+,-,=,=,+,+,-,+,+,+,-,+,+|G:-,+,=,=,+,=,=,+,=,+,+,+,=,+,+,+,-,+,=,+,-,+,+,-,=,+,=,-,-,=,-,+,+,-,+,-,-,+,+,+|A:+,+,-,=,+,+,+,=,+,+,=,=,+,+,=,-,=,+,-,+,+,-,=,+,-,+,+,+,-,+,+,+,-,-,-,-,=,=,+,=|F:=,+,=,=,-,=,-,+,-,+,+,+,=,-,-,+,+,=,+,+,+,+,-,-,+,+,+,+,=,-,=,+,=,+,+,-,-,+,+,=|E:-,+,=,+,+,+,+,=,-,-,+,+,-,+,-,+,=,+,=,=,=,-,+,+,=,+,=,+,-,-,+,=,+,-,-,=,+,+,+,+|K:+,-,+,+,=,-,+,-,+,=,+,+,+,+,-,=,+,+,+,-,+,+,+,=,-,-,+,=,+,+,=,=,-,-,+,-,=,+,=,=|J:+,-,=,+,+,+,+,-,=,=,-,=,+,+,+,=,+,=,-,-,+,+,+,+,-,+,+,=,+,=,-,+,+,+,+,-,=,=,-,-"

track2 = fst . fromRight ([], []) $ runParser track "-=++=-==++=++=-=+=-=+=+=--=-=++=-==++=-+=-=+=-=+=+=++=-+==++=++=-=-=---=++==--+++==++=+=--==++==+++=++=+++=--=+=-=+=-+=-+=-+-=+=-=+=-+++=+==++++==---=+=+=-S"

input3 = fst . fromRight ([], []) $ runParser parser "A:+,-,-,+,+,=,+,+,=,=,-"

track3 = fst . fromRight ([], []) $ runParser track "+=+++===-+++++=-==+--+=+===-++=====+--===++=-==+=++====-==-===+=+=--==++=+========-=======++--+++=-++=-+=+==-=++=--+=-====++--+=-==++======+=++=-+==+=-==++=-=-=---++=-=++==++===--==+===++===---+++==++=+=-=====+==++===--==-==+++==+++=++=+===--==++--===+=====-=++====-+=-+--=+++=-+-===++====+++--=++====+=-=+===+=====-+++=+==++++==----=+=+=-S"
